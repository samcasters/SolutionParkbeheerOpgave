// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkDataLayer.Data;

#nullable disable

namespace ParkDataLayer.Migrations
{
    [DbContext(typeof(ParkeerOpgaveContext))]
    [Migration("20231207110924_huurcontractrelationidincsharp")]
    partial class huurcontractrelationidincsharp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParkDataLayer.Model.DataContactGegevens", b =>
                {
                    b.Property<string>("telefoon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("adres")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("telefoon");

                    b.ToTable("contactGegevens");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ParkId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("actief")
                        .HasColumnType("bit");

                    b.Property<int>("nr")
                        .HasColumnType("int");

                    b.Property<string>("straat")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.ToTable("huis");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuurContract", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("HuisId")
                        .HasColumnType("int");

                    b.Property<int>("HuurPeriodeId")
                        .HasColumnType("int");

                    b.Property<int>("HuurderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HuisId");

                    b.HasIndex("HuurPeriodeId");

                    b.HasIndex("HuurderId");

                    b.ToTable("huurContract");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuurPeriode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("dagenVerhuurd")
                        .HasColumnType("int");

                    b.Property<DateTime>("eindDatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("huurPeriode");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuurder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gegevenstelefoon")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("naam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Gegevenstelefoon");

                    b.ToTable("huurder");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataPark", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Locatie")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("park");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuis", b =>
                {
                    b.HasOne("ParkDataLayer.Model.DataPark", "Park")
                        .WithMany("huisen")
                        .HasForeignKey("ParkId");

                    b.Navigation("Park");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuurContract", b =>
                {
                    b.HasOne("ParkDataLayer.Model.DataHuis", "Huis")
                        .WithMany()
                        .HasForeignKey("HuisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkDataLayer.Model.DataHuurPeriode", "HuurPeriode")
                        .WithMany()
                        .HasForeignKey("HuurPeriodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkDataLayer.Model.DataHuurder", "Huurder")
                        .WithMany()
                        .HasForeignKey("HuurderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Huis");

                    b.Navigation("HuurPeriode");

                    b.Navigation("Huurder");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataHuurder", b =>
                {
                    b.HasOne("ParkDataLayer.Model.DataContactGegevens", "Gegevens")
                        .WithMany()
                        .HasForeignKey("Gegevenstelefoon");

                    b.Navigation("Gegevens");
                });

            modelBuilder.Entity("ParkDataLayer.Model.DataPark", b =>
                {
                    b.Navigation("huisen");
                });
#pragma warning restore 612, 618
        }
    }
}
